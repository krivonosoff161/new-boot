#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import sqlite3

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = sqlite3.connect('secure_users.db')
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        
        print("üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for table in tables:
            print(f"  - {table[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É secure_users
        if ('secure_users',) in tables:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute("PRAGMA table_info(secure_users)")
            columns = cursor.fetchall()
            
            print(f"\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã secure_users:")
            for col in columns:
                print(f"  {col[1]} ({col[2]})")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
            cursor.execute("SELECT * FROM secure_users")
            users = cursor.fetchall()
            
            print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
            for user in users:
                print(f"  {user}")
        else:
            print("\n‚ùå –¢–∞–±–ª–∏—Ü–∞ 'secure_users' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_database()
