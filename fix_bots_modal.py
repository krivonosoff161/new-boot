#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–µ—Ç–∞–ª–µ–π –±–æ—Ç–∞
"""
import re

def fix_bots_modal():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π –±–æ—Ç–∞"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê –î–ï–¢–ê–õ–ï–ô –ë–û–¢–ê")
    print("=" * 50)
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('src/web/templates/bots.html', 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("üìÅ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω")
    
    # 1. –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é renderBotDetailsOld
    print("1Ô∏è‚É£ –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é renderBotDetailsOld...")
    
    # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
    start_pattern = r'function renderBotDetailsOld\(botDetails\) \{\s*console\.log\('
    start_match = re.search(start_pattern, content)
    
    if start_match:
        start_pos = start_match.start()
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {start_pos}")
        
        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ (–∏—â–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É –Ω–∞ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ)
        brace_count = 0
        in_function = False
        end_pos = start_pos
        
        for i, char in enumerate(content[start_pos:], start_pos):
            if char == '{':
                brace_count += 1
                in_function = True
            elif char == '}':
                brace_count -= 1
                if in_function and brace_count == 0:
                    end_pos = i + 1
                    break
        
        if end_pos > start_pos:
            # –£–¥–∞–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            content = content[:start_pos] + content[end_pos:]
            print(f"   ‚úÖ –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ (–ø–æ–∑–∏—Ü–∏–∏ {start_pos}-{end_pos})")
        else:
            print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏")
    else:
        print("   ‚ùå –§—É–Ω–∫—Ü–∏—è renderBotDetailsOld –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é showBotDetails
    print("\n2Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é showBotDetails...")
    
    # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é showBotDetails
    show_pattern = r'function showBotDetails\(botId\) \{[^}]*\}'
    show_match = re.search(show_pattern, content, re.DOTALL)
    
    if show_match:
        print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è showBotDetails –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        new_show_function = '''function showBotDetails(botId) {
    console.log('DEBUG: showBotDetails called with botId:', botId);
    currentBotId = botId;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º currentBotId –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(document.getElementById('botDetailsModal'));
    modal.show();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    document.getElementById('botDetailsModalTitle').textContent = `–î–µ—Ç–∞–ª–∏ –±–æ—Ç–∞ ${botId}`;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    loadBotDetails(botId);
}'''
        
        content = content.replace(show_match.group(0), new_show_function)
        print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è showBotDetails –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    else:
        print("   ‚ùå –§—É–Ω–∫—Ü–∏—è showBotDetails –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadBotDetails
    print("\n3Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadBotDetails...")
    
    # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadBotDetails
    load_pattern = r'function loadBotDetails\(botId\) \{[^}]*\}'
    load_match = re.search(load_pattern, content, re.DOTALL)
    
    if load_match:
        print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è loadBotDetails –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        new_load_function = '''function loadBotDetails(botId) {
    console.log('DEBUG: loadBotDetails called with botId:', botId);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    document.getElementById('botDetailsContent').innerHTML = `
        <div class="text-center py-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
            </div>
            <p class="mt-2 text-muted">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...</p>
        </div>
    `;
    
    console.log('DEBUG: Making API request to /api/bots/' + botId + '/details');
    fetch(`/api/bots/${botId}/details`)
        .then(response => response.json())
        .then(data => {
            console.log('–§—É–Ω–∫—Ü–∏—è renderBotDetails –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', data);
            if (data.success) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                renderBotDetails(data.bot || data.bot_details, data.charts, data.system_metrics, data.logs);
                // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã
                loadRecommendedPairs();
            } else {
                document.getElementById('botDetailsContent').innerHTML = `
                    <div class="alert alert-danger">
                        <h5>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h5>
                        <p>${data.error}</p>
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞:', error);
            document.getElementById('botDetailsContent').innerHTML = `
                <div class="alert alert-danger">
                    <h5>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h5>
                    <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ.</p>
                </div>
            `;
        });
}'''
        
        content = content.replace(load_match.group(0), new_load_function)
        print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è loadBotDetails –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    else:
        print("   ‚ùå –§—É–Ω–∫—Ü–∏—è loadBotDetails –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 4. –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    print("\n4Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...")
    
    # –ò—â–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal_pattern = r'<div class="modal-footer">\s*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>'
    modal_match = re.search(modal_pattern, content)
    
    if modal_match:
        print("   ‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å –∫–Ω–æ–ø–∫–æ–π –∫–æ–Ω—Å–æ–ª–∏
        new_modal_footer = '''<div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                <button type="button" class="btn btn-info" onclick="showConsoleOutput()">
                    <i class="fas fa-terminal"></i> –ö–æ–Ω—Å–æ–ª—å
                </button>
                <button type="button" class="btn btn-primary" onclick="refreshBotDetails()">
                    <i class="fas fa-sync"></i> –û–±–Ω–æ–≤–∏—Ç—å
                </button>
            </div>'''
        
        content = content.replace(modal_match.group(0), new_modal_footer)
        print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    else:
        print("   ‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print("\n5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...")
    
    with open('src/web/templates/bots.html', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("   ‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
    
    print("\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!")
    print("\nüåê –¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π –±–æ—Ç–∞")

if __name__ == "__main__":
    fix_bots_modal()



