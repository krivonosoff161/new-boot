#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ó–∞–ø—É—Å–∫ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Grid Bot
"""
import requests
import json
import time
import os

def start_and_monitor_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ–º Grid Bot –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–º –µ–≥–æ —Ä–∞–±–æ—Ç—É"""
    
    print("üöÄ –ó–ê–ü–£–°–ö –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì GRID BOT")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = requests.Session()
    
    # 1. –õ–æ–≥–∏–Ω–∏–º—Å—è
    print("1Ô∏è‚É£ –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...")
    login_data = {
        'username': '–¥–º–∏—Ç—Ä–∏–π',
        'password': '123'
    }
    
    response = session.post("http://localhost:5000/login", data=login_data)
    if response.status_code == 200:
        print("‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
        return
    
    bot_id = "grid_462885677_1759333561"
    
    # 2. –ó–∞–ø—É—Å–∫–∞–µ–º Grid Bot
    print(f"\n2Ô∏è‚É£ –ó–∞–ø—É—Å–∫ Grid Bot {bot_id}...")
    response = session.post(f"http://localhost:5000/api/bots/{bot_id}/start")
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ Grid Bot –∑–∞–ø—É—â–µ–Ω: {result.get('message', 'OK')}")
        print(f"   üêç –ü—Ä–æ—Ü–µ—Å—Å ID: {result.get('process_id', 'N/A')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        return
    
    # 3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞
    print(f"\n3Ô∏è‚É£ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
    print("   ‚è±Ô∏è –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    
    try:
        for i in range(30):  # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º 30 —Å–µ–∫—É–Ω–¥
            print(f"\n--- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {i+1}/30 ---")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
            response = session.get("http://localhost:5000/api/bots/status")
            if response.status_code == 200:
                bots_data = response.json()
                bots = bots_data.get('bots', [])
                grid_bot = None
                for bot in bots:
                    if bot.get('id') == bot_id:
                        grid_bot = bot
                        break
                
                if grid_bot:
                    print(f"   ü§ñ –°—Ç–∞—Ç—É—Å: {grid_bot.get('status', 'N/A')}")
                    print(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {grid_bot.get('last_update', 'N/A')}")
                else:
                    print("   ‚ùå –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
            response = session.get("http://localhost:5000/api/bots/processes")
            if response.status_code == 200:
                processes = response.json()
                if processes.get('success'):
                    bot_processes = processes.get('bot_processes', [])
                    grid_process = None
                    for proc in bot_processes:
                        if proc.get('bot_id') == bot_id:
                            grid_process = proc
                            break
                    
                    if grid_process:
                        print(f"   üêç –ü—Ä–æ—Ü–µ—Å—Å: PID {grid_process.get('pid', 'N/A')} - {grid_process.get('status', 'N/A')}")
                    else:
                        print("   ‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
            log_file = f"logs/bots/{bot_id}.log"
            if os.path.exists(log_file):
                with open(log_file, 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    if lines:
                        print(f"   üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥–µ: {lines[-1].strip()}")
                        print(f"   üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ: {len(lines)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ –±–æ—Ç–∞
            response = session.get(f"http://localhost:5000/api/bots/{bot_id}/details")
            if response.status_code == 200:
                details = response.json()
                if details.get('success'):
                    bot_details = details.get('bot_details', {})
                    balance_info = bot_details.get('balance_info', {})
                    print(f"   üí∞ –ë–∞–ª–∞–Ω—Å: ${balance_info.get('allocated_capital', 0):.2f}")
                    print(f"   üìä –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã: {len(bot_details.get('trading_pairs', []))}")
            
            time.sleep(2)  # –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã
            
    except KeyboardInterrupt:
        print(f"\n\n‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    
    # 4. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
    print(f"\n4Ô∏è‚É£ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Grid Bot...")
    response = session.post(f"http://localhost:5000/api/bots/{bot_id}/stop")
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ Grid Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {result.get('message', 'OK')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {response.status_code}")
    
    print("\n‚úÖ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù!")

if __name__ == "__main__":
    start_and_monitor_bot()



